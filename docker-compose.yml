networks:
  digitalcare_network:
    driver: bridge

services:
  django:
    container_name: digitalcare_django_prod
    build:
      context: ./digitalcare
    command: >
      sh -c "
      sleep 10 &&
      python manage.py collectstatic --noinput --clear &&
      python manage.py migrate &&
      gunicorn digitalcare.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - ./digitalcare:/usr/src/app/
      - ./media:/usr/src/app/media
      - static_volume_prod:/usr/src/app/staticfiles
    expose:
      - "8000"
    environment:
      DEBUG: ${DEBUG:-0}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DATABASE_URL: ${DATABASE_URL}      # Render Postgres
      REDIS_URL: ${REDIS_URL}            # Redis Cloud
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_API_KEY_SID: ${TWILIO_API_KEY_SID}
      TWILIO_API_KEY_SECRET: ${TWILIO_API_KEY_SECRET}
      TWILIO_TOKEN_TTL: ${TWILIO_TOKEN_TTL}
    networks:
      - digitalcare_network
    restart: unless-stopped

  celery:
    container_name: digitalcare_celery_prod
    build:
      context: ./digitalcare
    command: >
      sh -c "
      sleep 15 &&
      celery -A digitalcare worker --loglevel=INFO"
    volumes:
      - ./digitalcare:/usr/src/app/
      - ./media:/usr/src/app/media
    environment:
      DEBUG: ${DEBUG:-0}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DATABASE_URL: ${DATABASE_URL}      # Render Postgres
      REDIS_URL: ${REDIS_URL}            # Redis Cloud
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_API_KEY_SID: ${TWILIO_API_KEY_SID}
      TWILIO_API_KEY_SECRET: ${TWILIO_API_KEY_SECRET}
      TWILIO_TOKEN_TTL: ${TWILIO_TOKEN_TTL}
    depends_on:
      - django
    networks:
      - digitalcare_network
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    container_name: digitalcare_nginx_prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume_prod:/usr/src/app/staticfiles:ro
      - ./media:/usr/src/app/media:ro
      - /dev/null:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    depends_on:
      - django
    networks:
      - digitalcare_network
    restart: unless-stopped

volumes:
  static_volume_prod:
